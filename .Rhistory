datalist<-list()
titleset<-c()
for (i in 1:length(filename)){
a<-read_html(filename[i])
title<-html_nodes(a,"title")
title<-html_text(title)
title<-strsplit(title, split="'")[[1]][2]
b<-html_table(a)
#datalist<-append(datalist,b)
titleset<-append(titleset,title)
##중복되는 영화명 덮어쓰기 해서 갯수 안맞음(* 내 실수로 같은 영화 3개 더있음)
datalist[[title]]<-b
}
# "C:/Users/samsung/Documents/dt/BA_seminar"
setwd("../") ## 위에서 이동한 working directory 에서 이전 상위폴더로 이동(to default path in this proj )
datalist$`1987`
datalist$`23 아이덴티티`
datalist
filename<-readLines("filenames.txt")
datalist<-list()
titleset<-c()
for (i in 1:length(filename)){
a<-read_html(filename[i])
title<-html_nodes(a,"title")
title<-html_text(title)
title<-strsplit(title, split="'")[[1]][2]
b<-html_table(a)
#datalist<-append(datalist,b)
titleset<-append(titleset,title)
##중복되는 영화명 덮어쓰기 해서 갯수 안맞음(* 내 실수로 같은 영화 3개 더있음)
datalist[[title]]<-b
}
# "C:/Users/samsung/Documents/dt/BA_seminar"
setwd("../") ## 위에서 이동한 working directory 에서 이전 상위폴더로 이동(to default path in this proj )
setwd("moviedaily/") ## '현재경로'에서 moviedaily 폴더(하위 경로)로 이동
filename<-readLines("filenames.txt")
datalist<-list()
titleset<-c()
for (i in 1:length(filename)){
a<-read_html(filename[i])
title<-html_nodes(a,"title")
title<-html_text(title)
title<-strsplit(title, split="'")[[1]][2]
b<-html_table(a)
#datalist<-append(datalist,b)
titleset<-append(titleset,title)
##중복되는 영화명 덮어쓰기 해서 갯수 안맞음(* 내 실수로 같은 영화 3개 더있음)
datalist[[title]]<-b
}
# "C:/Users/samsung/Documents/dt/BA_seminar"
readLines("BA_seminar/moviedaily/?쇱옄蹂??듦퀎?뺣낫_2018-06-06 (20).xls")
setwd("moviedaily/") ## '현재경로'에서 moviedaily 폴더(하위 경로)로 이동
getwd()
setwd("BA_seminar/moviedaily/")
setwd("BA_seminar/moviedaily")
setwd("BA_seminar/")
setwd("BA_seminar/")
getwd()
setwd("moviedaily/filenames.txt/")
setwd("moviedaily/")
getwd()
filename<-readLines("filenames.txt")
datalist<-list()
titleset<-c()
for (i in 1:length(filename)){
a<-read_html(filename[i])
title<-html_nodes(a,"title")
title<-html_text(title)
title<-strsplit(title, split="'")[[1]][2]
b<-html_table(a)
#datalist<-append(datalist,b)
titleset<-append(titleset,title)
##중복되는 영화명 덮어쓰기 해서 갯수 안맞음(* 내 실수로 같은 영화 3개 더있음)
datalist[[title]]<-b
}
library(rvest)
library(xml2)
filename<-readLines("filenames.txt")
datalist<-list()
titleset<-c()
for (i in 1:length(filename)){
a<-read_html(filename[i])
title<-html_nodes(a,"title")
title<-html_text(title)
title<-strsplit(title, split="'")[[1]][2]
b<-html_table(a)
#datalist<-append(datalist,b)
titleset<-append(titleset,title)
##중복되는 영화명 덮어쓰기 해서 갯수 안맞음(* 내 실수로 같은 영화 3개 더있음)
datalist[[title]]<-b
}
getwd()
readLines("?쇱옄蹂??듦퀎?뺣낫_2018-06-06 (1).xls")
readLines("일자별_통계정보_2018-06-06 (3).xls")
filename<-readLines("filenames.txt")
datalist<-list()
titleset<-c()
for (i in 1:length(filename)){
a<-read_html(filename[i])
title<-html_nodes(a,"title")
title<-html_text(title)
title<-strsplit(title, split="'")[[1]][2]
b<-html_table(a)
#datalist<-append(datalist,b)
titleset<-append(titleset,title)
##중복되는 영화명 덮어쓰기 해서 갯수 안맞음(* 내 실수로 같은 영화 3개 더있음)
datalist[[title]]<-b
}
filename
filename<-readLines("filenames.txt")
filename
filename<-readLines("filenames.txt")
datalist<-list()
titleset<-c()
for (i in 1:length(filename)){
a<-read_html(filename[i])
title<-html_nodes(a,"title")
title<-html_text(title)
title<-strsplit(title, split="'")[[1]][2]
b<-html_table(a)
#datalist<-append(datalist,b)
titleset<-append(titleset,title)
##중복되는 영화명 덮어쓰기 해서 갯수 안맞음(* 내 실수로 같은 영화 3개 더있음)
datalist[[title]]<-b
}
datalist
filename<-readLines("filenames.txt")
datalist<-list()
titleset<-c()
for (i in 1:length(filename)){
a<-read_html(filename[i])
title<-html_nodes(a,"title")
title<-html_text(title)
title<-strsplit(title, split="'")[[1]][2]
b<-html_table(a)
#datalist<-append(datalist,b)
titleset<-append(titleset,title)
##중복되는 영화명 덮어쓰기 해서 갯수 안맞음(* 내 실수로 같은 영화 3개 더있음)
datalist[[title]]<-b
}
datalist
i=1
datalist<-list()
titleset<-c()
a<-read_html(filename[i])
a
title<-html_nodes(a,"title")
title<-html_text(title)
title<-strsplit(title, split="'")[[1]][2]
title
b<-html_table(a)
b
VieW(a)
write(a,"sdf.txt")
a
write(as.character(a),"sdf.txt")
read.csv("sdfsdf.csv")
read.csv("sdfsdf.csv",header = T)
data = read.csv("?쇱옄蹂??듦퀎?뺣낫_2018-06-06 (16).csv")
data=read.csv(choose.files())
data
data=read.csv(choose.files(),header = T)
data[1:3,]
title = data[1,]
title
colnames(data)[1]
data=data[-1,]
data
data=read.csv(choose.files(),header = T)
colnames(data)= data[1,]
title = colnames(data)[1]
title
colnames(data)= data[1,]
data
data=read.csv(choose.files(),header = T)
title = colnames(data)[1]
title
colnames(data)= data[1,]
data
data=read.csv(choose.files(),header = T)
data
data=data[-1,]
data
data=read.csv(choose.files(),header = T)
data[1,]
as.vector(data[1,])
as.character(data[1,])
(data[1,])
as.vector(data[1,])
as.vector(data[1,])
as.vector(data[1,][1])
data[1,][1]
data[1]
data[1'',]
data[1,]
as.character(data[1,])
as.vector.factor(data[1,])
as.factor(data[1,])
data[1,]
coln=data[1,]
colname = c()
coln
length(coln)
coln[1]
coln[,1]
as.character(coln[,1]))
as.character(coln[,1])
colname = c()
for (i in 1:length(coln)){
colname=c(colname,as.character(coln[,i]))
}
colname
coln=data[1,]
coln
data
data = data[-1,]
data
title = colnames(data)[1]
colnames(data)= data[1,]
title
data=read.csv(choose.files(),header = T)
coln=data[1,]
colname = c()
for (i in 1:length(coln)){
colname=c(colname,as.character(coln[,i]))
}
data = data[-1,]
title = colnames(data)[1]
colnames(data)= colname
data
data=read.csv(choose.files(),header = T)
coln=data[1,]
colname = c()
for (i in 1:length(coln)){
colname=c(colname,as.character(coln[,i]))
}
data = data[-1,]
title = colnames(data)[1]
colnames(data)= colname
data = data[1:14,]
datalist<-append(datalist,data)
titleset<-append(titleset,title)
datalist
datalist<-list()
titleset<-c()
for (i in 1:length(filename)){
data=read.csv(choose.files(),header = T)
coln=data[1,]
colname = c()
for (i in 1:length(coln)){
colname=c(colname,as.character(coln[,i]))
}
data = data[-1,]
title = colnames(data)[1]
colnames(data)= colname
data = data[1:14,]
datalist<-c(datalist,data)
titleset<-c(titleset,title)
}
# "C:/Users/s
data=read.csv(choose.files(),header = T)
coln=data[1,]
colname = c()
for (i in 1:length(coln)){
colname=c(colname,as.character(coln[,i]))
}
data = data[-1,]
title = colnames(data)[1]
colnames(data)= colname
data = data[1:14,]
datalist<-c(datalist,data)
titleset<-c(titleset,title)
data
datalist
data=read.csv(choose.files(),header = T)
coln=data[1,]
colname = c()
for (i in 1:length(coln)){
colname=c(colname,as.character(coln[,i]))
}
data = data[-1,]
title = colnames(data)[1]
colnames(data)= colname
data = data[1:14,]
datalist<-c(datalist,data)
titleset<-c(titleset,title)
datalist
data
class(data)
titleset
datalist<-list()
titleset<-c()
data=read.csv(choose.files(),header = T)
coln=data[1,]
colname = c()
for (i in 1:length(coln)){
colname=c(colname,as.character(coln[,i]))
}
data = data[-1,]
title = colnames(data)[1]
colnames(data)= colname
data = data[1:14,]
datalist[[i]]<-data
titleset<-c(titleset,title)
titleset
datalist
i
title
filename<-readLines("filenames.txt")
datalist<-list()
titleset<-c()
for (i in 1:length(filename)){
data=read.csv(filename[i],header = T)
coln=data[1,]
colname = c()
for (i in 1:length(coln)){
colname=c(colname,as.character(coln[,i]))
}
data = data[-1,]
title = colnames(data)[1]
colnames(data)= colname
data = data[1:14,]
##title문자열 전처리 ###
datalist[[i]]<-data
titleset<-c(titleset,title)
}
datalist
length(filename)
datalist<-list()
titleset<-c()
for (i in 1:length(filename)){
data=read.csv(filename[i],header = T)
coln=data[1,]
colname = c()
for (j in 1:length(coln)){
colname=c(colname,as.character(coln[,j]))
}
data = data[-1,]
title = colnames(data)[1]
colnames(data)= colname
data = data[1:14,]
##title문자열 전처리 ###
datalist[[i]]<-data
titleset<-c(titleset,title)
}
datalist
titleset
names(datalsit)<-titleset
names(datalist)<-titleset
datalist
filename
lapply(datalist,`length<-.factor`)
lapply(datalist,length)
datalist$X.강철비..일자별.통계정보
length(datalist$X.러빙.빈센트..일자별.통계정보)
class(datalist$X.러빙.빈센트..일자별.통계정보)
datalist$X.러빙.빈센트..일자별.통계정보[1,]
datalist$X.러빙.빈센트..일자별.통계정보[15,]
datalist$X.러빙.빈센트..일자별.통계정보[14,]
lapply(datalist,nrow)
datalist
hj<-datalist[[1]]
hj
hj[,1]
as.Date(hj[,1], format = "%m/%d/%Y")
class(hj[,1])
weekdays(as.Date(hj[,1]))
hj$요일<-weekdays(as.Date(hj[,1]))
hj
hj$요일
for (i in 1:length(datalist)){
sub_list<-datalist[[1]]
sub_list$요일<-weekdays(as.Date(sub_list[,1]))
}
for (i in 1:length(datalist)){
sub_list<-datalist[[i]]
sub_list$요일<-weekdays(as.Date(sub_list[,1]))
}
sub_list<-datalist[[1]]
sub_list$요일<-weekdays(as.Date(sub_list[,1]))
sub$list
sub_list$요일
for (i in 1:length(datalist)){
datalist[[i]]$요일<-weekdays(as.Date(datalist[[i]][,1]))
}
ㅑ=1
datalist[[i]]$요일
weekdays(as.Date(datalist[[i]][,1]))
datalist[[i]][,1]
weekdays(as.Date(datalist[[i]][,1]))
as.Date(datalist[[1]][,1])
ㅑ
weekdays(as.Date(datalist[[i]][,1]))
i=1
weekdays(as.Date(datalist[[i]][,1]))
datalist[[i]]
1:length(datalist)
#moviedaily 전처리
for (i in 1:length(datalist)){
datalist[[i]]$요일<-weekdays(as.Date(datalist[[i]][,1]))
}
weekdays(as.Date(datalist[[i]][,1]))
#moviedaily 전처리
for (i in 1:length(datalist)){
print(i)
datalist[[i]]$요일<-weekdays(as.Date(datalist[[i]][,1]))
}
i=11
datalist[[i]]$요일<-weekdays(as.Date(datalist[[i]][,1]))
weekdays(as.Date(datalist[[i]][,1]))
as.Date(datalist[[i]][,1])
datalist[[i]][,1]
as.Date(datalist[[i]][,1])
class(datalist[[i]][,1])
class(datalist[[11]][,1])
class(datalist[[10]][,1])
datalist[[10]][,1]
datalist[[11]][,1]
as.Date(datalist[[11]][,1])
for (i in 1:length(datalist)){
print(i)
datalist[[i]]$요일<-weekdays(as.Date(datalist[[i]][,1],format="%d/%m/%Y"))
}
datalist[[2]]
datalist[[3]]
datalist[[4]]
datalist[[90]]
for (i in 1:length(datalist)){
print(i)
datalist[[i]]$요일<-weekdays(as.Date(datalist[[i]][,1],format="%m/%d/%Y"))
}
datalist[[90]]
datalist[[1]]$요일[1]
datalist[[1]]$요일
datalist[[1]]
for (i in 1:length(datalist)){
print(i)
datalist[[i]]$요일<-weekdays(as.Date(datalist[[i]][,1],format="%m/%d/%Y"))
}
datalist[[1]]
datalist[[3]]
datalist[[90]]
datalist[[99]]
library(stringr)
library("stringr")
install.packages("stringr")
install.packages("stringr")
install.packages("stringr")
library(stringr)
install.packages("stringi")
library(stringr)
stringr::str_detect("sdf","s")
library("stringi", lib.loc="C:/Program Files/R/R-3.4.3/library")
install.packages("stringi")
stringr::str_detect("sdf","s")
library(stringi)
install.packages("stringi")
R.version
stringr::str_detect("sdf","s")
stringr::str_detect("sdf","s")
for (i in 1:length(datalist)){
if(str_detect(datalist[[i]][,1],"/")==TRUE){
datalist[[i]]$요일<-weekdays(as.Date(datalist[[i]][,1],format="%m/%d/%Y"))
}else(str_detect(datalist[[i]][,1],"/")==FALSE){
datalist[[i]]$요일<-weekdays(as.Date(datalist[[i]][,1]))
}
}
for (i in 1:length(datalist)){
if(str_detect(datalist[[i]][,1],"/")==TRUE){
datalist[[i]]$요일<-weekdays(as.Date(datalist[[i]][,1],format="%m/%d/%Y"))
}else{
datalist[[i]]$요일<-weekdays(as.Date(datalist[[i]][,1]))
}
}
library(stringr
)
for (i in 1:length(datalist)){
if(str_detect(datalist[[i]][,1],"/")==TRUE){
datalist[[i]]$요일<-weekdays(as.Date(datalist[[i]][,1],format="%m/%d/%Y"))
}else{
datalist[[i]]$요일<-weekdays(as.Date(datalist[[i]][,1]))
}
}
datalist[[1]]
datalist[[3]]
datalist[[50]]$요일
datalist[[50]]$요일[1]
table(datalist[[i]]$요일[1])
table(datalist$요일[1])
length(datalist$요일[1]=="수요일")
wednesday<-list()
for (i in length(datalist))
if (datalist[[i]]$요일[1]=="수요일"){
wednesday<-append(wednesday,datalist[[i]])
}
}
wednesday<-list()
for (i in length(datalist)){
if (datalist[[i]]$요일[1]=="수요일"){
wednesday<-append(wednesday,datalist[[i]])
}
}
wednesday
names(datalist)
names(datalist)[i]
wednesday<-list()
for (i in length(datalist)){
if (datalist[[i]]$요일[1]=="수요일"){
wednesday[[names(datalist)[i]]]<-datalist[[i]]
}
}
wednesday
